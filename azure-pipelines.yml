
# https://aka.ms/yaml

name: $(BuildID)

trigger:
- master

variables:
  Configuration: Release
  BootsVersion: 0.1.0
  BootsSuffix: -beta
  PackageVersion: $(BootsVersion).$(Build.BuildNumber)$(BootsSuffix)
  Mono.Pkg: https://download.mono-project.com/archive/6.0.0/macos-10-universal/MonoFramework-MDK-6.0.0.313.macos10.xamarin.universal.pkg
  XA.Vsix: https://download.visualstudio.microsoft.com/download/pr/d78329f2-f4e6-440d-97d1-5a1b6b52a4ee/9595a9df7a9ceebe52c761cf18e68440/xamarin.android.sdk-9.4.0.34.vsix
  XA.Pkg: https://download.visualstudio.microsoft.com/download/pr/f47d66fe-3033-454d-9c69-887497f8d57b/37ac8f50cb8067fdf9dd527a26bb45b8/xamarin.android-9.4.0.34.pkg
  XA.Version: 9.4.0-34
  ShippedBoots: 0.1.0.251-beta
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:

- job: windows
  pool:
    name: Hosted Windows 2019 with VS2019
    demands:
    - msbuild
    - vstest
  steps:

  - task: MSBuild@1
    displayName: build
    inputs:
      solution: boots.sln
      msbuildArguments: '/restore /t:Build,Pack /p:Configuration=$(Configuration)'

  - script: |
      dotnet vstest Boots.Tests\bin\$(Configuration)\netcoreapp2.0\Boots.Tests.dll --logger:trx
    displayName: Run tests

  - task: PublishTestResults@2
    displayName: publish test results
    inputs:
      testResultsFormat: VSTest
      testResultsFiles: TestResults\*.trx
      testRunTitle: windows
    condition: succeededOrFailed()

  - template: scripts/verify.yaml
    parameters:
      url: $(XA.Vsix)

  - task: PublishPipelineArtifact@0
    displayName: artifacts
    inputs:
      artifactName: windows
      targetPath: bin
    condition: succeededOrFailed()

- job: mac
  pool:
    name: Hosted macOS
    demands: msbuild
  steps:

  - task: UseDotNet@2
    displayName: install .NET Core
    inputs:
      version: 2.1.701

  - task: Boots@0
    displayName: install Mono
    inputs:
      uri: $(Mono.Pkg)

  - task: MSBuild@1
    displayName: build
    inputs:
      solution: boots.sln
      msbuildArguments: '/restore /t:Build,Pack /p:Configuration=$(Configuration)'

  - script: |
      dotnet vstest Boots.Tests/bin/$(Configuration)/netcoreapp2.0/Boots.Tests.dll --logger:trx
    displayName: Run tests

  - task: PublishTestResults@2
    displayName: publish test results
    inputs:
      testResultsFormat: VSTest
      testResultsFiles: TestResults/*.trx
      testRunTitle: mac
    condition: succeededOrFailed()

  - template: scripts/verify.yaml
    parameters:
      url: $(XA.Pkg)

  - task: PublishPipelineArtifact@0
    displayName: artifacts
    inputs:
      artifactName: mac
      targetPath: bin
    condition: succeededOrFailed()
